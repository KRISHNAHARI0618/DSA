# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# Virtual environment
venv/
env/
ENV/
.venv/
.ENV/

# Distribution / packaging
build/
dist/
*.egg-info/

# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# PyInstaller
*.spec

# pytest
.cache/
.pytest_cache/

# MyPy
.mypy_cache/

# VS Code settings
.vscode/

# JetBrains IDEs
.idea/

# macOS system files
.DS_Store

# Logs
*.log

# SQLite database files
*.sqlite3

# Environment variables
.env
.env.*

# Coverage reports
htmlcov/
.coverage
coverage.xml
*.cover
*.py,cover

# Pylint
pylint-report.txt
pylint-global.txt

